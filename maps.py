import networkx as nx
# import matplotlib.pyplot as plt

G = nx.MultiDiGraph()

G.add_nodes_from(range(1,77))
G.add_nodes_from([101,102,104,105,107,108,109])
G.add_nodes_from([201,202,203,204,206,207,208,209,210,211,212])
G.add_nodes_from([301,304,305,306])
G.add_nodes_from([401,402,403,405,406,407,408,409,4101,4102])
G.add_nodes_from([501,504,505,506,507,508])
G.add_nodes_from([604,605,606,618])
G.add_nodes_from([701,703,705,706,707])
G.add_nodes_from([801,803])

G.add_weighted_edges_from([
    (1, 2, 1.16),
    (2, 1, 0.96),
    (2, 3, 0.74),
    (3, 2, 0.61),
    (3, 4, 0.99),
    (3, 5, 0.74),
    (3, 9, 3.26),
    (3, 605, 0.99),
    (4, 3, 0.99),
    (4, 8, 1.77),
    (4, 605, 0.23),
    (5, 3, 0.61),
    (5, 6, 0.86),
    (5, 13, 1.52),
    (6, 5, 0.86),
    (6, 7, 1.16),
    (6, 606, 0.28),
    (7, 6, 1.16),
    (7, 11, 0.76),
    (7, 604, 0.31),
    (8, 4, 1.77),
    (8, 9, 0.37),
    (8, 604, 0.27),
    (9, 3, 3.26),
    (9, 8, 0.37),
    (9, 10, 0.67),
    (9, 11, 1.71),
    (10, 9, 0.67),
    (11, 12, 3.01),
    (11, 7, 0.76),
    (11, 9, 1.46),
    (11, 12, 3.01),
    (12, 11, 2.51),
    (12, 17, 2.52),
    (12, 107, 1.62),
    (12, 19, 1.29),
    (12, 105, 1.39),
    (12, 21, 2.28),
    (12, 11, 2.5),
    (13, 5, 1.26),
    (13, 14, 1.43),
    (13, 51, 2.86),
    (14, 13, 1.02),
    (14, 15, 0.39),
    (14, 47, 0.7),
    (15, 14, 0.39),
    (15, 16, 0.63),
    (16, 15, 0.63),
    (16, 17, 0.58),
    (16, 508, 0.2),
    (17, 12, 1.8),
    (17, 16, 0.58),
    (17, 18, 0.57),
    (18, 107, 1.07),
    (18, 17, 0.57),
    (18, 46, 0.66),
    (19, 12, 0.92),
    (19, 107, 0.99),
    (19, 20, 0.47),
    (20, 19, 0.47),
    (20, 39, 0.83),
    (20, 504, 0.9),
    (20, 504, 0.75),
    (21, 12, 2.28),
    (21, 105, 1.22),
    (21, 102, 1.57),
    (21, 104, 0.39),
    (21, 101, 1.02),
    (21, 22, 2.24),
    (21, 25, 1.93),
    (22, 21, 1.6),
    (22, 102, 0.95),
    (22, 101, 0.7),
    (22, 23, 0.48),
    (22, 38, 1.0),
    (22, 39, 1.296),
    (23, 22, 0.48),
    (23, 24, 0.87),
    (23, 210, 0.64),
    (24, 23, 1.044),
    (24, 25, 0.46),
    (24, 31, 0.69),
    (24, 209, 0.95),
    (25, 21, 1.61),
    (25, 101, 1.23),
    (25, 24, 0.46),
    (25, 26, 0.74),
    (25, 109, 0.51),
    (26, 25, 0.888),
    (26, 27, 0.9),
    (26, 108, 0.25),
    (26, 109, 0.42),
    (27, 26, 1.08),
    (27, 28, 1.26),
    (27, 29, 0.96),
    (27, 201, 0.55),
    (27, 202, 0.69),
    (28, 27, 1.512),
    (29, 27, 0.8),
    (29, 30, 0.41),
    (29, 32, 0.81),
    (30, 29, 0.41),
    (30, 31, 0.62),
    (30, 109, 0.24),
    (31, 24, 0.966),
    (31, 30, 0.62),
    (31, 33, 0.57),
    (32, 29, 0.81),
    (32, 35, 0.94),
    (32, 204, 0.41),
    (33, 31, 0.57),
    (33, 34, 0.81),
    (33, 209, 0.84),
    (34, 33, 0.81),
    (34, 35, 0.59),
    (34, 36, 0.86),
    (35, 32, 0.94),
    (35, 34, 0.59),
    (35, 206, 0.35),
    (36, 67, 3.67),
    (36, 71, 1.68),
    (36, 301, 1.97),
    (36, 34, 0.86),
    (36, 67, 3.3),
    (36, 72, 1.68),
    (36, 211, 0.854),
    (37, 38, 0.79),
    (37, 55, 1.036),
    (37, 209, 0.85),
    (37, 211, 0.67),
    (38, 22, 1.2),
    (38, 37, 0.948),
    (38, 209, 0.44),
    (39, 20, 0.83),
    (39, 22, 1.08),
    (39, 40, 0.624),
    (39, 212, 1.54),
    (39, 40, 1.04),
    (40, 39, 0.52),
    (40, 41, 1.008),
    (40, 42, 1.66),
    (40, 39, 0.52),
    (40, 41, 1.68),
    (40, 42, 1.66),
    (41, 40, 0.84),
    (41, 40, 0.84),
    (41, 43, 1.38),
    (41, 44, 0.95),
    (41, 45, 1.72),
    (41, 50, 1.32),
    (42, 40, 1.66),
    (42, 48, 0.67),
    (42, 212, 0.32),
    (42, 40, 1.66),
    (42, 48, 1.38),
    (43, 41, 1.38),
    (43, 48, 1.44),
    (43, 501, 0.1),
    (44, 41, 0.95),
    (44, 45, 0.8),
    (44, 505, 0.15),
    (45, 41, 1.72),
    (45, 44, 0.8),
    (45, 46, 0.95),
    (45, 506, 0.2),
    (46, 18, 0.66),
    (46, 45, 0.9),
    (46, 47, 0.9),
    (46, 506, 0.73),
    (46, 507, 0.87),
    (46, 508, 0.63),
    (47, 508, 0.78),
    (47, 14, 0.7),
    (47, 46, 0.9),
    (47, 507, 1.13),
    (48, 54, 1.38),
    (48, 56, 0.89),
    (48, 401, 0.73),
    (48, 42, 0.67),
    (48, 56, 0.89),
    (48, 42, 1.38),
    (48, 43, 1.44),
    (48, 49, 1.38),
    (48, 54, 1.382),
    (49, 48, 1.38),
    (49, 50, 1.38),
    (49, 701, 1.654),
    (50, 41, 1.32),
    (50, 49, 1.38),
    (50, 51, 3.36),
    (50, 53, 1.22),
    (51, 13, 2.38),
    (52, 803, 4.012),
    (52, 75, 1.12),
    (53, 54, 2.871),
    (53, 618, 3.96),
    (53, 705, 2.44),
    (53, 50, 1.468),
    (53, 75, 1.505),
    (54, 48, 1.66),
    (54, 58, 1.45),
    (54, 53, 2.871),
    (54, 58, 1.445),
    (54, 48, 2.073),
    (55, 56, 0.54),
    (55, 37, 0.74),
    (55, 56, 0.648),
    (55, 212, 1.68),
    (56, 55, 0.54),
    (56, 57, 1.11),
    (56, 406, 0.49),
    (56, 48, 1.068),
    (56, 55, 0.54),
    (57, 56, 1.11),
    (57, 402, 0.67),
    (57, 403, 0.54),
    (57, 405, 0.51),
    (58, 48, 1.06),
    (58, 54, 1.73),
    (58, 59, 0.42),
    (58, 60, 0.82),
    (58, 54, 1.734),
    (58, 60, 0.815),
    (58, 703, 0.62),
    (59, 58, 0.42),
    (59, 407, 0.18),
    (59, 4101, 0.24),
    (60, 58, 0.82),
    (60, 62, 1.01),
    (60, 4102, 0.79),
    (60, 58, 1.059),
    (60, 61, 2.19),
    (60, 62, 1.0),
    (61, 60, 2.19),
    (61, 706, 0.784),
    (61, 705, 0.608),
    (62, 60, 1.21),
    (62, 63, 1.21),
    (62, 64, 0.86),
    (62, 60, 1.0),
    (62, 63, 1.21),
    (62, 707, 1.043),
    (63, 62, 1.45),
    (63, 64, 0.77),
    (63, 70, 6.05),
    (63, 62, 1.452),
    (63, 74, 4.208),
    (64, 62, 1.21),
    (64, 63, 0.77),
    (64, 65, 1.91),
    (64, 306, 0.99),
    (65, 64, 1.91),
    (65, 66, 0.51),
    (65, 69, 0.98),
    (66, 65, 0.51),
    (66, 67, 1.42),
    (66, 68, 1.4),
    (66, 73, 0.59),
    (67, 36, 3.19),
    (67, 66, 1.56),
    (67, 68, 1.97),
    (67, 211, 3.05),
    (67, 36, 2.75),
    (67, 211, 3.48),
    (68, 66, 1.68),
    (68, 67, 2.36),
    (68, 69, 0.82),
    (68, 71, 1.87),
    (68, 301, 2.02),
    (68, 304, 0.63),
    (69, 65, 1.38),
    (69, 68, 0.82),
    (69, 305, 0.56),
    (69, 306, 1.88),
    (70, 63, 6.45),
    (70, 305, 0.78),
    (71, 68, 1.87),
    (71, 72, 1.31),
    (71, 72, 1.31),
    (71, 208, 1.44),
    (72, 36, 1.68),
    (72, 71, 1.31),
    (72, 36, 1.68),
    (72, 71, 1.31),
    (72, 208, 0.34),
    (73, 66, 0.59),
    (73, 408, 0.4),
    (73, 409, 0.33),
    (74, 63, 4.854),
    (74, 801, 4.988),
    (74, 706, 1.902),
    (75, 52, 1.12),
    (75, 53, 1.505),
    (75, 618, 2.3),
    (76, 803, 1.325),
    (101, 21, 1.02),
    (101, 22, 0.98),
    (101, 25, 1.23),
    (102, 21, 1.31),
    (102, 22, 1.33),
    (104, 21, 0.39),
    (105, 12, 1.14),
    (105, 21, 1.02),
    (107, 12, 1.35),
    (107, 18, 1.5),
    (107, 19, 0.99),
    (108, 26, 0.25),
    (109, 25, 0.51),
    (109, 26, 0.35),
    (109, 30, 0.24),
    (201, 27, 0.66),
    (202, 27, 0.69),
    (203, 204, 0.72),
    (204, 32, 0.41),
    (204, 203, 0.72),
    (204, 206, 2.3),
    (206, 35, 0.35),
    (206, 204, 2.3),
    (206, 207, 0.61),
    (206, 211, 1.71),
    (207, 206, 0.61),
    (208, 72, 0.34),
    (208, 71, 1.44),
    (209, 24, 1.33),
    (209, 33, 0.6),
    (209, 37, 1.19),
    (209, 38, 0.616),
    (210, 23, 0.64),
    (211, 67, 3.53),
    (211, 36, 0.61),
    (211, 37, 0.67),
    (211, 67, 2.9),
    (211, 206, 1.71),
    (212, 39, 1.1),
    (212, 42, 0.32),
    (212, 55, 1.2),
    (301, 36, 1.97),
    (301, 68, 2.02),
    (304, 68, 0.63),
    (305, 69, 0.56),
    (305, 70, 0.78),
    (306, 64, 0.99),
    (306, 69, 1.88),
    (401, 48, 0.73),
    (402, 57, 0.67),
    (403, 57, 0.54),
    (405, 57, 0.51),
    (406, 56, 0.49),
    (407, 59, 0.18),
    (407, 4101, 0.41),
    (408, 73, 0.4),
    (409, 73, 0.33),
    (409, 4101, 0.5),
    (501, 43, 0.1),
    (504, 20, 0.75),
    (504, 20, 0.75),
    (505, 44, 0.15),
    (506, 45, 0.2),
    (507, 46, 0.87),
    (507, 47, 1.13),
    (508, 16, 0.2),
    (508, 46, 0.63),
    (508, 47, 0.78),
    (604, 7, 0.31),
    (604, 8, 0.27),
    (605, 3, 0.99),
    (605, 4, 0.23),
    (606, 6, 0.28),
    (618, 53, 5.321),
    (618, 803, 1.383),
    (618, 801, 1.254),
    (618, 75, 3.45),
    (701, 49, 1.654),
    (703, 58, 0.62),
    (705, 53, 3.172),
    (705, 61, 0.608),
    (705, 706, 1.283),
    (706, 61, 0.784),
    (706, 74, 1.358),
    (706, 705, 1.283),
    (706, 707, 1.288),
    (707, 62, 1.043),
    (707, 706, 1.288),
    (801, 74, 4.988),
    (801, 618, 1.254),
    (803, 52, 3.646),
    (803, 76, 1.325),
    (803, 618, 1.383),
    (4101, 59, 0.24),
    (4101, 407, 0.41),
    (4101, 409, 0.5),
    (4102, 60, 0.79),
])

building_number = {
    "역사관": 101,
    "본관": 102,
    "애지문": 104,
    "한양플라자": 105,
    "학생회관": 107,
    "국제관": 108,
    "박물관": 109,
    "재성토목관": 201,
    "건축관": 202,
    "과학기술관": 203,
    "신소재공학관": 204,
    "공업센터 본관": 206,
    "공업센터 별관": 207,
    "FTC": 208,
    '정몽구 미래자동차연구센터': 210,
    '제2공학관': 211,
    '제1공학관': 212,
    '대운동장': 301,
    '산학기술관': 304,
    'IT/BT관': 305,
    '올림픽체육관': 306,
    '생활과학대학': 401,
    '제1음악관': 402,
    '제2음악관': 403,
    '백남음악관': 405,
    '학군단': 406,
    '제1법학관': 407,
    '제2법학관': 408,
    '제3법학관': 409,
    '경제금융대학': 4102,
    '법학학술정보관': 4101,
    '백남학술정보관': 501,
    '사회과학관': 504,
    '사범대학 본관': 505,
    '사범대학 별관': 506,
    '자연과학대학': 507,
    '인문관': 508,
    '제1의학관': 604,
    '제2의학관': 605,
    '의과대학 본관': 606,
    '의대계단강의동': 618,
    'HIT': 701,
    '한양사이버대학교 2관': 703,
    '융합교육관': 705,
    '경영관': 706,
    '행원파크': 707,
    '제1학생생활관': 801,
    '제5학생생활관': 803

}

def path_search(source, target):
    return nx.dijkstra_path(G, source, target)

if __name__=='__main__':
    pos = nx.spring_layout(G)
    '''
    nx.draw_networkx_nodes(G, pos,
                           nodelist=[101,102,104,105,107,108,109],
                           node_color='b',
                           node_size=80)

    nx.draw_networkx_nodes(G, pos,
                           nodelist=[201,202,203,204,206,207,208,209,210,211,212],
                           node_color='y',
                           node_size=80)

    nx.draw_networkx_nodes(G, pos,
                           nodelist=[301,304,305,306],
                           node_color='#ffb6c1',
                           node_size=80)

    nx.draw_networkx_nodes(G, pos,
                           nodelist=[401,402,403,405,406,407,408,409,4101,4102],
                           node_color='#551a8b',
                           node_size=80)

    nx.draw_networkx_nodes(G, pos,
                           nodelist=[501,504,505,506,507,508],
                           node_color='r',
                           node_size=80)

    nx.draw_networkx_nodes(G, pos,
                           nodelist=[604,605,606,618],
                           node_color='#ffa500',
                           node_size=80)

    nx.draw_networkx_nodes(G, pos,
                           nodelist=[701,703,705,706,707],
                           node_color='#98fb98',
                           node_size=80)

    nx.draw_networkx_nodes(G, pos,
                           nodelist=[801,803],
                           node_color='g',
                           node_size=80)

    nx.draw_networkx_nodes(G, pos,
                           nodelist=range(1,76),
                           node_color='#000000',
                           node_size=40)

    nx.draw_networkx_edges(G, pos, width=0.6)
    '''
    # print(nx.shortest_path(G, 212, 305))
    print(nx.dijkstra_path(G, 59, 305))
    print(nx.dijkstra_path_length(G, 59, 305))

    # plt.show()